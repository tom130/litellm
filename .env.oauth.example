# Claude OAuth Configuration
# Copy this file to .env and fill in your values

# ===== REQUIRED SETTINGS =====

# Claude OAuth Client ID (required)
# Get this from your Claude OAuth application settings
CLAUDE_OAUTH_CLIENT_ID=your-client-id-here

# OAuth Redirect URI (required)
# Must match exactly with your Claude OAuth app settings
# For local development:
CLAUDE_OAUTH_REDIRECT_URI=http://localhost:4000/auth/claude/callback
# For production (use HTTPS):
# CLAUDE_OAUTH_REDIRECT_URI=https://your-domain.com/auth/claude/callback

# Token Encryption Key (required for production)
# Generate with: openssl rand -base64 32
CLAUDE_TOKEN_ENCRYPTION_KEY=generate-a-secure-key-here

# LiteLLM Master Key (required)
# This is your main API key for accessing the proxy
LITELLM_MASTER_KEY=sk-your-master-key-here

# ===== OPTIONAL SETTINGS =====

# OAuth Scopes (optional, defaults shown)
# Available scopes: claude:chat, claude:models, claude:read
CLAUDE_OAUTH_SCOPES="claude:chat claude:models claude:read"

# Auto Refresh Settings (optional)
# Automatically refresh tokens before expiry
CLAUDE_OAUTH_AUTO_REFRESH=true
# Seconds before token expiry to trigger refresh (default: 300 = 5 minutes)
CLAUDE_OAUTH_REFRESH_THRESHOLD=300

# Database Configuration (optional, defaults to PostgreSQL)
# For SQLite (not recommended for production):
# DATABASE_URL=sqlite:///app/litellm.db
# For PostgreSQL (recommended):
DATABASE_URL=postgresql://llmproxy:dbpassword9090@db:5432/litellm

# UI Credentials (optional)
UI_USERNAME=admin
UI_PASSWORD=change-this-password

# Email Configuration (optional, for notifications)
LITELLM_EMAIL=
LITELLM_EMAIL_PASSWORD=

# Logging Configuration (optional)
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LITELLM_LOG_LEVEL=INFO
# Set to true for detailed debugging
DETAILED_DEBUG=false

# Mode Configuration (optional)
# Options: production, development, staging
LITELLM_MODE=production

# ===== MONITORING SETTINGS (optional) =====

# Grafana Admin Password
GRAFANA_PASSWORD=admin

# pgAdmin Credentials (only used with debug profile)
PGADMIN_EMAIL=admin@example.com
PGADMIN_PASSWORD=admin

# ===== SECURITY SETTINGS =====

# CORS Origins (optional, for web applications)
# Comma-separated list of allowed origins
LITELLM_CORS_ORIGINS=http://localhost:3000,http://localhost:4000

# Rate Limiting (optional)
# Max requests per minute per user
LITELLM_RATE_LIMIT_RPM=100

# ===== DOCKER SETTINGS =====

# Docker Registry Settings (for CI/CD)
DOCKERHUB_USERNAME=
DOCKERHUB_TOKEN=

# ===== NOTES =====
# 
# 1. Security Best Practices:
#    - Always use HTTPS in production for OAuth redirect URI
#    - Generate strong encryption keys
#    - Use environment-specific .env files (.env.production, .env.staging)
#    - Never commit .env files to version control
#
# 2. Token Storage:
#    - PostgreSQL is recommended for production (multi-instance support)
#    - SQLite can be used for development/testing
#    - Redis is used for caching (automatic with docker-compose.oauth.yml)
#
# 3. OAuth Flow:
#    - Users authenticate once at /auth/claude/authorize
#    - Tokens are automatically refreshed before expiry
#    - Each user has isolated token storage
#
# 4. Monitoring:
#    - Prometheus metrics available at http://localhost:9090
#    - Grafana dashboards at http://localhost:3000
#    - OAuth health endpoint at http://localhost:4000/auth/claude/health