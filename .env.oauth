# Claude OAuth Environment Variables
# This file contains environment variables for testing Claude OAuth with Docker

# ============================================
# CLAUDE OAUTH TOKENS
# ============================================
# These will be populated after running the OAuth login flow
# Run: docker exec litellm-litellm-1 litellm claude login
CLAUDE_ACCESS_TOKEN=
CLAUDE_REFRESH_TOKEN=
CLAUDE_EXPIRES_AT=

# Token encryption key (generate with: openssl rand -hex 32)
# IMPORTANT: Change this to a secure key in production!
CLAUDE_TOKEN_ENCRYPTION_KEY=a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890

# ============================================
# LITELLM CONFIGURATION
# ============================================
# Master key for accessing the LiteLLM API
LITELLM_MASTER_KEY=sk-oauth-test-1234

# Database configuration
DATABASE_URL=postgresql://llmproxy:dbpassword9090@db:5432/litellm
STORE_MODEL_IN_DB=True

# Logging configuration
LITELLM_LOG_LEVEL=INFO
DETAILED_DEBUG=false

# LiteLLM mode
LITELLM_MODE=production

# ============================================
# UI CONFIGURATION
# ============================================
# Admin UI credentials
UI_USERNAME=admin
UI_PASSWORD=admin

# ============================================
# REDIS CONFIGURATION
# ============================================
REDIS_HOST=redis
REDIS_PORT=6379

# ============================================
# OAUTH CONFIGURATION
# ============================================
# Enable Claude OAuth
ENABLE_CLAUDE_OAUTH=true
CLAUDE_OAUTH_AUTO_REFRESH=true
CLAUDE_OAUTH_REFRESH_THRESHOLD=300

# OAuth scopes (space-separated)
CLAUDE_OAUTH_SCOPES=org:create_api_key user:profile user:inference

# Token storage location (inside container)
CLAUDE_TOKEN_FILE=/app/.litellm/claude_tokens.json

# ============================================
# OPTIONAL: MONITORING
# ============================================
# Prometheus metrics
ENABLE_PROMETHEUS_METRICS=true
PROMETHEUS_PORT=9090

# Grafana settings (if using)
GRAFANA_PASSWORD=admin

# Langfuse tracking (optional)
# LANGFUSE_PUBLIC_KEY=
# LANGFUSE_SECRET_KEY=
# LANGFUSE_HOST=https://cloud.langfuse.com

# ============================================
# OPTIONAL: ALERTING
# ============================================
# Email alerting configuration
EMAIL_ALERTING_ENABLED=false
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=
# SMTP_PASSWORD=
# SENDER_EMAIL=
# RECEIVER_EMAIL=

# Slack alerting (optional)
# SLACK_WEBHOOK_URL=

# ============================================
# OPTIONAL: PGADMIN
# ============================================
# pgAdmin credentials (for database management)
PGADMIN_EMAIL=admin@example.com
PGADMIN_PASSWORD=admin

# ============================================
# DEVELOPMENT/DEBUG SETTINGS
# ============================================
# Enable debug mode for troubleshooting
# DEBUG=true

# Disable SSL verification (only for testing!)
# VERIFY_SSL=false

# Request timeout in seconds
REQUEST_TIMEOUT=600

# Maximum retries for failed requests
MAX_RETRIES=3

# ============================================
# DOCKER-SPECIFIC SETTINGS
# ============================================
# Health check settings
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# Container resource limits (optional)
# CONTAINER_MEMORY_LIMIT=2g
# CONTAINER_CPU_LIMIT=2

# ============================================
# NOTES
# ============================================
# 1. After setting up the containers, run the OAuth login:
#    docker exec -it litellm-litellm-1 litellm claude login
#
# 2. Follow the authorization URL and complete the flow:
#    docker exec -it litellm-litellm-1 litellm claude callback <CODE>
#
# 3. The tokens will be automatically saved and this file will be updated
#
# 4. To check token status:
#    docker exec -it litellm-litellm-1 litellm claude status
#
# 5. To manually refresh tokens:
#    docker exec -it litellm-litellm-1 litellm claude refresh
#
# 6. Access the LiteLLM UI at: http://localhost:4000
#    Username: admin, Password: admin
#
# 7. Access Prometheus metrics at: http://localhost:9090
#
# 8. Access Grafana dashboards at: http://localhost:3000
#    Username: admin, Password: admin
#
# 9. Access pgAdmin at: http://localhost:5050
#    Email: admin@example.com, Password: admin